# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python CI

on: 
  workflow_call:
    inputs:
      pythonVersion:
        description: The Python version to install
        default: "3.10"
        required: false
        type: string
      pythonRequirements:
        description: Newline seperated list of requirements files
        default: |
          requirements.txt
          requirements.dev.txt
        required: false
        type: string
      pylintPath:
        description: The space seperated paths and files to run pylint on
        required: true
        type: string
      pylintContinueOnError:
        description: Continue workflow even on Pylint error
        required: false
        type: boolean
        default: false
      radonPath:
        description: The space seperated paths to calculate code complexity
        required: true
        type: string
      blackPath:
        description: The space seperated paths to check formatting
        required: true
        type: string
      blackContinueOnError:
        description: Continue workflow even on black check error
        required: false
        type: boolean
        default: false
        

permissions:
  contents: read

jobs:
  pylint:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ inputs.pythonVersion }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.pythonVersion }}
        cache-dependency-path: ${{ inputs.pythonRequirements }}
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements.dev.txt

    - name: create tmp log directory
      run: mkdir /tmp/ci

    # lint
    - name: lint with pylint
      run: |
        pylint ${{ inputs.pylintPath }} --output /tmp/ci/pylint.txt
      continue-on-error: ${{ inputs.pylintContinueOnError }}
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: pylint report
        path: /tmp/ci/pylint.txt

  complexity:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ inputs.pythonVersion }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.pythonVersion }}
        cache-dependency-path: ${{ inputs.pythonRequirements }}
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements.dev.txt

    - name: create tmp log directory
      run: mkdir /tmp/ci

    # complexity
    - name: calculate code complexity
      run: |
        radon cc ${{ inputs.radonPath }} -a > /tmp/ci/radon.txt
    - uses: actions/upload-artifact@v3
      with:
        name: radon code complexity
        path: /tmp/ci/radon.txt

    # formatting
    - name: check formatting
      run:  black ${{ inputs.blackPath }} --check > /tmp/ci/black.txt
      continue-on-error: ${{ inputs.blackContinueOnError }}
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: black formatting 
        path: /tmp/ci/black.txt
  